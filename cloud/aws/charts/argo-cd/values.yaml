---

configs:
  knownHostsAnnotations: {}
  knownHosts:
    data:
      ssh_known_hosts: |
        github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg
  credentialTemplates: {}
  #  ssh-creds:
  #    url: git@github.com:companyName
  #    sshPrivatekey: |
  #      -----BEGIN OPENSSH PRIVATE KEY-----
  #      ...
  #      -----END OPENSSH PRIVATE KEY-----
  repositories:
    elastic:
      type: git
      name: elastic
      url: https://github.com/elastic/helm-charts
    fluent:
      type: git
      name: fluent
      url: https://github.com/fluent/helm-charts
    prometheus-community:
      type: helm
      name: prometheus-community
      url: https://prometheus-community.github.io/helm-charts
    grafana:
      type: helm
      name: grafana
      url: https://github.com/grafana/helm-charts
    bitnami:
      type: helm
      name: bitnami
      url: https://charts.bitnami.com/bitnami
    metrics-server:
      type: helm
      name: metrics-server
      url: https://kubernetes-sigs.github.io/metrics-server
  secret:
    createSecret: false
    githubSecret: ""
    argocdServerAdminPassword: "$2a$10$zoUgs0Cox8AZsSgba3xsq.RVQoaZOFIJ/LL2rZcCs3uSrkxXE7QaG"
server:
  name: eks-test
  extraArgs:
    - --insecure
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      kubernetes.io/ingress.class: "nginx"
    labels: {}
    hosts:
      - argocd.dev.*.cloud
    paths:
      - /
    pathType: Prefix
    extraPaths: []
    tls: []
    https: false
  configEnabled: true
  config:
    url: ""
  configAnnotations: {}
  additionalProjects:
  # Doc: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/project.yaml
    - name: platform-mon # Name for the AppProject object
      namespace: argocd  # Namespace where to create the AppProject object
      additionalLabels: {}
      additionalAnnotations: {}
      description: System workloads
      sourceRepos:
      - '*'
      destinations:
      - namespace: monitoring
        server: https://kubernetes.default.svc
      - namespace: kube-system
        server: https://kubernetes.default.svc
      namespaceResourceWhitelist:
      - group: '*'
        kind: '*'
      clusterResourceWhitelist:
      - group: '*'
        kind: '*'
      orphanedResources:
        warn: false
  additionalApplications:
  # Doc: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/application.yaml
    - name: prometheus  # Name for the Application object
      namespace: argocd # Namespace where to create the Application object
      project: platform-mon
      destination:
        server: https://kubernetes.default.svc
        namespace: monitoring
      source:
        repoURL: https://prometheus-community.github.io/helm-charts
        targetRevision: "35.5.1"
        chart: kube-prometheus-stack
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        automated:
          selfHeal: true
          prune: true
    - name: grafana     # Name for the Application object
      namespace: argocd # Namespace where to create the Application object
      project: platform-mon
      destination:
        server: https://kubernetes.default.svc
        namespace: monitoring
      source:
        repoURL: https://github.com/grafana/helm-charts
        targetRevision: "6.29.5"
        chart: grafana
        helm:
          parameters:
          - name: datasources.datasources.yaml
            value: |-
              apiVersion: 1
              datasources:
              - name: Prometheus
                type: prometheus
                uid: prometheus
                url: http://prometheus-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090
                access: proxy
                isDefault: true
                jsonData:
                  timeInterval: 30s
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        automated:
          selfHeal: true
          prune: true
    - name: metrics-server # Name for the Application object
      namespace: argocd    # Namespace where to create the Application object
      project: platform-mon
      destination:
        server: https://kubernetes.default.svc
        namespace: kube-system
      source:
        repoURL: https://kubernetes-sigs.github.io/metrics-server
        targetRevision: "3.8.2"
        chart: metrics-server
        helm:
          parameters: []
        #  - name: apiService.insecureSkipTLSVerify
        #    value: "false"
        #  - name: args
        #    value: "['--kubelet-insecure-tls']"
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        automated:
          selfHeal: true
          prune: true
    - name: fluentbit
      namespace: argocd
      #finalizers:
      #  - resources-finalizer.argocd.argoproj.io
      project: platform-mon
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: monitoring
      source:
        repoURL: 'https://github.com/fluent/helm-charts'
        path: charts/fluent-bit
        targetRevision: "fluent-bit-0.20.1"
        #helm:
        #  parameters:
        #  - name: serviceType
        #    value: LoadBalancer
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - Validate=true
      retry:
        limit: 5
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 3m
