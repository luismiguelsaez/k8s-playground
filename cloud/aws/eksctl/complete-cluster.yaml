--- 
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: test-complete-multi-ng
  version: "1.24"
  region: eu-central-1

availabilityZones: [eu-central-1a, eu-central-1b, eu-central-1c]

vpc:
  cidr: 172.24.0.0/16
  nat:
    gateway: Single
  autoAllocateIPv6: false
  clusterEndpoints:
    publicAccess: true
    privateAccess: true

nodeGroups:
  - name: ng-frontend
    instanceType: t3a.xlarge
    minSize: 2
    maxSize: 5
    desiredCapacity: 2
    amiFamily: Bottlerocket
    privateNetworking: true
    volumeSize: 100
    volumeType: gp2
    volumeEncrypted: true
    disableIMDSv1: false
    labels:
      nodegroup-type: frontend
    iam:
      withAddonPolicies:
        autoScaler: true
  #- name: ng-backend
  #  instanceType: t3a.medium
  #  minSize: 2
  #  maxSize: 5
  #  desiredCapacity: 2
  #  amiFamily: AmazonLinux2
  #  privateNetworking: true
  #  disableIMDSv1: true
  #  labels:
  #    nodegroup-type: backend
  #  iam:
  #    withAddonPolicies:
  #      autoScaler: true
  #  tags:
  #    k8s.io/cluster-autoscaler/enabled: "true"
  #    k8s.io/cluster-autoscaler/test-complete-multi-ng: "owned"
  #- name: ng-batch
  #  minSize: 2
  #  maxSize: 5
  #  desiredCapacity: 2
  #  amiFamily: AmazonLinux2
  #  privateNetworking: true
  #  disableIMDSv1: false
  #  labels:
  #    nodegroup-type: batch
  #  instancesDistribution:
  #    maxPrice: 0.017
  #    instanceTypes: ["t3.small", "t3.medium"]
  #    onDemandBaseCapacity: 0
  #    onDemandPercentageAboveBaseCapacity: 50
  #    spotInstancePools: 2

cloudWatch:
  clusterLogging:
    enableTypes:
    - api
    - audit

karpenter:
  version: "v0.24.0"
  createServiceAccount: true

iam:
  withOIDC: true
  serviceAccounts:

  - metadata:
      name: s3-reader
      namespace: backend-apps
      labels: {aws-usage: "application"}
    attachPolicyARNs:
    - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"

  - metadata:
      name: aws-load-balancer-controller
      namespace: kube-system
    roleName: aws-load-balancer-controller@kube-system
    wellKnownPolicies:
      awsLoadBalancerController: true

  - metadata:
      name: cluster-autoscaler
      namespace: kube-system
    roleName: cluster-autoscaler@kube-system
    wellKnownPolicies:
      autoScaler: true

  - metadata:
      name: external-dns
      namespace: kube-system
    roleName: external-dns@kube-system
    wellKnownPolicies:
      externalDNS: true

  - metadata:
      name: aws-ebs-csi-driver
      namespace: kube-system
    roleName: aws-ebs-csi-driver@kube-system
    wellKnownPolicies:
      ebsCSIController: true
